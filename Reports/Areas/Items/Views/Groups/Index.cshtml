@model MvcApplication2.Areas.Items.Models.GroupsModel
<style>
    div#p_items_groups_index {
        border: 2px solid black;
        background-color: transparent;
        width: auto;
        height: 776px; /* 780 - 4 */
    }

        div#p_items_groups_index div.filter {
            float: left;
            border-right: 2px solid black;
            border-bottom: 2px solid black;
            background-color: transparent;
            width: 300px;
            height: 298px; /* 300 - 2 */
        }

            div#p_items_groups_index div.filter table tr td {
                padding: 2px;
            }

                div#p_items_groups_index div.filter table tr td input[type="text"] {
                    width: 180px;
                }

        div#p_items_groups_index div.groups-table {
            border-bottom: 2px solid black;
            background-color: transparent;
            margin-left: 302px;
            width: auto;
            height: 298px; /* 300 - 2 */
            overflow: auto;
        }

        div#p_items_groups_index div.command-buttons {
            float: left;
            border-right: 2px solid black;
            background-color: transparent;
            width: 300px;
            height: 476px; /* 776 - 300 */
        }

        div#p_items_groups_index div.items {
            background-color: transparent;
            margin-left: 302px;
            width: auto;
            height: 476px; /* 776 - 300 */
            overflow: auto;
        }

            div#p_items_groups_index div.items table tr td {
                border: 1px solid black;
                padding: 2px;
            }

        div#p_items_groups_index div.command-buttons table tr td {
            padding: 2px;
        }

            div#p_items_groups_index div.command-buttons table tr td input[type="button"] {
                width: 200px;
            }

        /* The Modal (background) */
        div#p_items_groups_index div.group-detail {
            display: none; /* Hidden by default */
            position: fixed; /* Stay in place */
            z-index: 1; /* Sit on top */
            left: 0;
            top: 0;
            width: 100%; /* Full width */
            height: 100%; /* Full height */
            overflow: auto; /* Enable scroll if needed */
            background-color: rgb(0,0,0); /* Fallback color */
            background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
        }

            /* Modal Content/Box */
            div#p_items_groups_index div.group-detail div.content {
                background-color: #fefefe;
                margin: 15% auto; /* 15% from the top and centered */
                padding: 10px;
                border: 1px solid #888;
                width: 480px;
            }

                /* The Close Button */
                div#p_items_groups_index div.group-detail div.content div.header span {
                    color: #aaa;
                    float: right;
                    font-size: 28px;
                    font-weight: bold;
                }

                    div#p_items_groups_index div.group-detail div.content div.header span:hover,
                    div#p_items_groups_index div.group-detail div.content div.header span:focus {
                        color: black;
                        text-decoration: none;
                        cursor: pointer;
                    }

                /* Modal Header */
                div#p_items_groups_index div.group-detail div.content div.header h2 {
                    font-weight: bold;
                    text-align: center;
                }

                div#p_items_groups_index div.group-detail div.content table tr td {
                    padding: 2px;
                }

                    div#p_items_groups_index div.group-detail div.content table tr td input[type="text"] {
                        width: 280px;
                    }
</style>
<div id="p_items_groups_index">
    <div class="filter">
        <p style="font-weight: bold; text-align: center;">Фильтр</p>
        <table>
            <tr>
                <td style="text-align: right">Наименование:&nbsp;</td>
                <td><input type="text" value="" class="f" data-db-name="наименование" /></td>
            </tr>
            <tr>
                <td style="text-align: right">Форма выпуска:&nbsp;</td>
                <td><input type="text" value="" class="f" data-db-name="форма_выпуска" /></td>
            </tr>
            <tr>
                <td style="text-align: right">Дозировка:&nbsp;</td>
                <td><input type="text" value="" class="f" data-db-name="дозировка" /></td>
            </tr>
            <tr>
                <td style="text-align: right">Упаковка:&nbsp;</td>
                <td><input type="text" value="" class="f" data-db-name="упаковка" /></td>
            </tr>
            <tr>
                <td style="text-align: right">Кол-во в п.у.(№):&nbsp;</td>
                <td><input type="text" value="" class="f" data-db-name="количество" /></td>
            </tr>
            <tr>
                <td style="text-align: right">Производитель:&nbsp;</td>
                <td><input type="text" value="" class="f" data-db-name="производитель" /></td>
            </tr>
            <tr>
                <td style="text-align: right">Страна пр.:&nbsp;</td>
                <td><input type="text" value="" class="f" data-db-name="страна" /></td>
            </tr>
        </table>
        <br />
        <div style="text-align: center">
            <input type="button" value="Применить фильтр" onclick="ItemsGroupsIndex.applyFilter();" />
        </div>
        <div>
            <table>
                <tr>
                    <td>для групп</td>
                    <td>
                        <input type="checkbox" checked="checked" />
                    </td>
                </tr>
                <tr>
                    <td>для препаратов</td>
                    <td>
                        <input type="checkbox" />
                    </td>
                </tr>
            </table>
        </div>
    </div>
    <div class="groups-table"></div>
    <div class="command-buttons">
        <table>
            <tr>
                <td><input type="button" value="Добавить новую группу" onclick="ItemsGroupsIndex.insert();" /></td>
            </tr>
            <tr>
                <td><input type="button" value="Изменить описание группы" disabled="disabled" /></td>
            </tr>
            <tr>
                <td><input type="button" value="Изменить состав группы" disabled="disabled" onclick="ItemsGroupsIndex.commitLog()" /></td>
            </tr>
            <tr>
                <td><input type="button" value="Удалить выбранную группу" disabled="disabled" /></td>
            </tr>
            <tr><td>&nbsp;</td></tr>
            <tr><td>Справочники используемые при поиске</td></tr>
            <tr>
                <td>
                    <input type="checkbox" name="src1" checked="checked" />
                    <span>&nbsp;"Грлс"</span>
                </td>
            </tr>
            <tr>
                <td>
                    <input type="checkbox" name="src2" checked="checked" />
                    <span>&nbsp;"Грпц"</span>
                </td>
            </tr>
            <tr>
                <td>
                    <input type="checkbox" name="src3" checked="checked" />
                    <span>&nbsp;"Фс1с"</span>
                </td>
            </tr>
            <tr><td>&nbsp;</td></tr>
            <tr><td><span>Показывать группы только с записями 1С</span>&nbsp;<input type="checkbox" checked="checked" /></td></tr>
        </table>
    </div>
    <div class="items">
        <table style="margin: 2px; width: 100%; border: none;">
            <colgroup>
                <col width="200" />
                <col width="200" />
            </colgroup>
            <tr>
                <td onclick="ItemsGroupsIndex.selectIn();" style="background-color: #ddffdd;">Препараты входящие в выбранную группу</td>
                <td onclick="ItemsGroupsIndex.selectOut();">Препараты не входящие ни в одну из группу</td>
                <td style="border: none;"></td>
            </tr>
            <tr>
                <td colspan="3">
                    <div class="items-in-group"></div>
                    <div class="items-out-group" style="display: none;"></div>
                </td>
            </tr>
        </table>
    </div>
    <!-- Модальное окно -->
    <div class="group-detail">
        <div class="content">
            <div class="header">
                <span>&times;</span>
                <h2>&nbsp;</h2>
            </div>
            <table>
                <tr>
                    <td style="text-align: right">Наименование:&nbsp;</td>
                    <td><input type="text" value="" /></td>
                </tr>
                <tr>
                    <td style="text-align: right">Форма выпуска:&nbsp;</td>
                    <td><input type="text" value="" /></td>
                </tr>
                <tr>
                    <td style="text-align: right">Дозировка:&nbsp;</td>
                    <td><input type="text" value="" /></td>
                </tr>
                <tr>
                    <td style="text-align: right">Упаковка:&nbsp;</td>
                    <td><input type="text" value="" /></td>
                </tr>
                <tr>
                    <td style="text-align: right">Кол-во в п.у.(№):&nbsp;</td>
                    <td><input type="text" value="" /></td>
                </tr>
                <tr>
                    <td style="text-align: right">Производитель:&nbsp;</td>
                    <td><input type="text" value="" /></td>
                </tr>
                <tr>
                    <td style="text-align: right">Страна пр.:&nbsp;</td>
                    <td><input type="text" value="" /></td>
                </tr>
            </table>
            <br />
            <div style="text-align: center">
                <input type="button" value="Сохранить" onclick="ItemsGroupsIndex.save();" disabled="disabled" />
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    var ItemsGroupsIndex = (function () {

        var mainDiv = $('div#p_items_groups_index');

        // filter
        var filterDiv = mainDiv.find('div[class="filter"]');
        var filterTextInputs = filterDiv.find('input[type="text"]');
        var filterCheckboxInputs = filterDiv.find('input[type="checkbox"]');

        // groups-table
        var groupsTableDiv = mainDiv.find('div[class="groups-table"]');

        // command-buttons
        var commandButtonsDiv = mainDiv.find('div[class="command-buttons"]');
        var buttonInputs = commandButtonsDiv.find('> table:eq(0) input[type="button"]');
        var checkboxInputs = commandButtonsDiv.find('> table:eq(0) input[type="checkbox"]');

        // items
        var itemsDiv = mainDiv.find('div[class="items"]');
        var itemsInLabel = itemsDiv.find('> table tr:eq(0) td:eq(0)');
        var itemsOutLabel = itemsDiv.find('> table tr:eq(0) td:eq(1)');
        var itemsInGroup = itemsDiv.find('> table tr:eq(1) td:eq(0) div[class="items-in-group"]');
        var itemsOutGroup = itemsDiv.find('> table tr:eq(1) td:eq(0) div[class="items-out-group"]');

        // group-detail - Модальное окно
        var groupDetailDiv = mainDiv.find('div[class="group-detail"]');
        var groupDetailCloseSpan = groupDetailDiv.find('> div.content div.header span');
        var groupDetailInputs = groupDetailDiv.find('> div.content input[type="text"]');
        var groupDetailSaveButton = groupDetailDiv.find('> div.content input[type="button"]');

        var selectedGroupId = null;
        var log = [];
        var rqp = {
            SessionId: Nskd.Server.SessionId,
            Command: '',
            Parameters: []
        };

        groupDetailInputs.keyup(function () {
            groupDetailSaveButton.prop('disabled', false);
        });
        groupDetailCloseSpan.click(function () {
            groupDetailDiv.hide();
            groupDetailInputs.val('');
            groupDetailSaveButton.prop('disabled', true);
        });

        mainDiv.find('.f').each(function (i, el) {
            el = $(el);
            el.autocomplete({
                source: function (request, response) {
                    rqp.Command = 'Items.Groups.GetFieldValueList';
                    rqp.Parameters = [
                        { Name: 'field', Value: el.attr('data-db-name') },
                        { Name: 'term', Value: request.term }
                    ];
                    Nskd.Http.post({
                        url: '/Items/Groups/GetFieldValueList',
                        rqp: rqp,
                        done: function (data) {
                            //alert(data);
                            response(Nskd.Json.parse(data));
                        },
                        fail: function () {
                            response(null);
                        }
                    });
                }
            })
        });

        return {
            applyFilter: function () {
                rqp.Parameters = [
                        { Name: 's1', Value: checkboxInputs.eq(0)[0].checked ? 1 : 0 },
                        { Name: 's2', Value: checkboxInputs.eq(1)[0].checked ? 2 : 0 },
                        { Name: 's3', Value: checkboxInputs.eq(2)[0].checked ? 3 : 0 },
                        { Name: 'f1', Value: filterTextInputs.eq(0).val() },
                        { Name: 'f2', Value: filterTextInputs.eq(1).val() },
                        { Name: 'f3', Value: filterTextInputs.eq(2).val() },
                        { Name: 'f4', Value: filterTextInputs.eq(3).val() },
                        { Name: 'f5', Value: filterTextInputs.eq(4).val() },
                        { Name: 'f6', Value: filterTextInputs.eq(5).val() },
                        { Name: 'f7', Value: filterTextInputs.eq(6).val() },
                        { Name: 'fs_flag', Value: checkboxInputs.eq(3)[0].checked }
                ];
                //alert(Nskd.Json.toString(rqp));
                if (filterCheckboxInputs.eq(1)[0].checked) {
                    itemsOutGroup.empty();
                    rqp.Command = 'Items.Groups.Index.GetTableForItemsOutGroup';
                    Nskd.Http.post({
                        url: '/Items/Groups/ApplyFilter',
                        rqp: rqp,
                        done: function (data) {
                            //alert(data);
                            itemsOutGroup.empty().html(data);
                        },
                        fail: null,
                        wMsg: 'Заргузка данных с сервера ...',
                        dMsg: 'OK',
                        fMsg: '<font color="red">Ошибка при заргузке данных с сервера.</font>'
                    });
                }
                if (filterCheckboxInputs.eq(0)[0].checked) {
                    groupsTableDiv.empty();
                    selectedGroupId = null;
                    itemsInGroup.empty();
                    rqp.Command = 'Items.Groups.Index.ApplyFilterForGroups';
                    Nskd.Http.post({
                        url: '/Items/Groups/ApplyFilter',
                        rqp: rqp,
                        done: function (data) {
                            //alert(data);
                            groupsTableDiv.html(data);
                        },
                        fail: null,
                        wMsg: 'Заргузка данных с сервера ...',
                        dMsg: 'OK',
                        fMsg: '<font color="red">Ошибка при заргузке данных с сервера.</font>'
                    });
                }
            },
            insert: function () {
                rqp.Command = 'Items.Groups.Index.InsertGroup';
                groupDetailDiv.find('div.content div.header h2').text('Добавить новую группу');
                groupDetailDiv.show();
                groupDetailInputs.eq(0).focus();
            },
            save: function () {
                groupsTableDiv.empty();
                rqp.Parameters = [
                        { Name: 'f1', Value: groupDetailInputs.eq(0).val() },
                        { Name: 'f2', Value: groupDetailInputs.eq(1).val() },
                        { Name: 'f3', Value: groupDetailInputs.eq(2).val() },
                        { Name: 'f4', Value: groupDetailInputs.eq(3).val() },
                        { Name: 'f5', Value: groupDetailInputs.eq(4).val() },
                        { Name: 'f6', Value: groupDetailInputs.eq(5).val() },
                        { Name: 'f7', Value: groupDetailInputs.eq(6).val() }
                ];
                //alert(Nskd.Json.toString(rqp));
                Nskd.Http.post({
                    url: '/Items/Groups/UpsertGroup',
                    rqp: rqp,
                    done: function (data) {
                        //alert(data);
                        if (rqp.Command == 'Items.Groups.Index.InsertGroup') {
                            groupsTableDiv.html(data);
                        }
                    },
                    fail: null,
                    wMsg: 'Сохранение данных на сервере ...',
                    dMsg: 'OK',
                    fMsg: '<font color="red">Ошибка при обмене данными с сервером.</font>'
                });
                groupDetailDiv.hide();
                groupDetailInputs.val('');
                groupDetailSaveButton.prop('disabled', true);
            },
            showBlockWithItemsInGroup: function (html) {
                itemsInGroup.empty().html(html);
            },
            writeToLog: function (logRecord) {
                buttonInputs.eq(2).prop('disabled', false);
                logRecord.groupId = selectedGroupId;
                log.push(logRecord);
            },
            getSelectedGroupId: function () {
                return selectedGroupId;
            },
            setSelectedGroupId: function (gid) {
                selectedGroupId = gid;
            },
            commitLog: function () {
                buttonInputs.eq(2).prop('disabled', true);
                if (log.length > 0) {
                    rqp.Command = 'Items.Groups.Index.CommitLog';
                    rqp.Parameters = [{ Name: 'log', Value: log }];
                    //alert(Nskd.Json.toString(rqp));
                    Nskd.Http.post({
                        url: '/Items/Groups/CommitLog',
                        rqp: rqp,
                        done: function (data) {
                            alert(data);
                        },
                        fail: null,
                        wMsg: 'Сохранение данных на сервере ...',
                        dMsg: 'OK',
                        fMsg: '<font color="red">Ошибка при обмене данными с сервером.</font>'
                    });
                    log = [];
                }
            },
            selectOut: function () {
                itemsInLabel.css('background-color', 'transparent');
                itemsOutLabel.css('background-color', '#ddffdd');
                itemsInGroup.hide();
                itemsOutGroup.show();
            },
            selectIn: function () {
                itemsInLabel.css('background-color', '#ddffdd');
                itemsOutLabel.css('background-color', 'transparent');
                itemsInGroup.show();
                itemsOutGroup.hide();
            }
        };
    })();
</script>
