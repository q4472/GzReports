@model MvcApplication2.Areas.Order.Models.F0Model
<style type="text/css">
    /* это надо для валидации. рисует красную рамку и если её нет, то нужна чёрная. иначе всё смещается.*/
    input {
        border: 1px solid black;
    }

        input.error {
            border: 1px solid red;
        }

    #order_f0_index {
        width: 100%;
        height: 100%;
        overflow: auto;
        position: relative;
    }

        #order_f0_index div.sect1 {
            position: absolute;
            left: 0px;
            top: 0px;
            bottom: 350px;
            width: 100%;
            overflow: auto;
            background-color: #ffffcc;
        }

            #order_f0_index div.sect1 div.filter_panel {
                width: 400px;
                height: 100%;
                overflow: auto;
                float: left;
            }

            #order_f0_index div.sect1 div.grid_panel {
                width: auto;
                height: 100%;
                overflow: auto;
                margin-left: 400px;
            }

        #order_f0_index div.sect2 {
            position: absolute;
            left: 0px;
            bottom: 0px;
            width: 100%;
            height: 350px;
            overflow: auto;
            background-color: #ffccff;
        }

            #order_f0_index div.sect2 div.commamd_panel {
                width: 300px;
                height: 100%;
                overflow: auto;
                float: left;
            }

            #order_f0_index div.sect2 div.detail_panel {
                width: auto;
                height: 100%;
                overflow: auto;
                margin-left: 300px;
            }
</style>
<div id="order_f0_index">
    <input type="hidden" id="p_order_f0_current_id" />
    <div class="sect1">
        <div class="filter_panel">
            @{ Html.RenderPartial("~/Areas/Order/Views/F0/Filter.cshtml", Model); }
        </div>
        <div class="grid_panel">
            @{ Html.RenderPartial("~/Areas/Order/Views/F0/FilteredView.cshtml", Model); }
        </div>
    </div>
    <div class="sect2">
        <div class="commamd_panel">
            @{ Html.RenderPartial("~/Areas/Order/Views/F0/Command.cshtml"); }
        </div>
        <div class="detail_panel">
        </div>
    </div>
</div>
<script type="text/javascript">
    var OrderF0 = (function () {
        OrderF0Filter.addNewDataGridReceivedHandler(function (data) {
            $('#order_f0_index div.sect1 div.grid_panel').html(data);
        });
        OrderF0Command.addSaveButtonClickHandler(function () {
            var pars = OrderF0Detail.getFormDataV2();
            pars.push({ Name: 'session_id', Value: Nskd.Server.SessionId });
            var rqp = {
                SessionId: Nskd.Server.SessionId,
                Command: 'Order.F0.SaveSpecHead',
                Parameters: pars
            };
            var data = Nskd.Json.toString(rqp);
            //alert(data); return;
            $.post('/Order/F0/DetailSave', data, function (data) {
                //alert(data);
                $('#order_f0_index div.sect2 div.detail_panel').html(data);
                OrderF0Filter.apply();
            });
        });
        OrderF0Command.addAddButtonClickHandler(function () {
            OrderF0.createSpec();
            //OrderF0Detail.clearForm();
        });
        OrderF0Command.addDelButtonClickHandler(function () {
            var pars = OrderF0Detail.getFormDataV2();
            pars.push({ Name: 'session_id', Value: Nskd.Server.SessionId });
            var rqp = {
                SessionId: Nskd.Server.SessionId,
                Command: 'Order.F0.DeleteSpec',
                Parameters: pars
            };
            var data = Nskd.Json.toString(rqp);
            //alert(data); return;
            $.post('/Order/F0/Delete', data, function (data) {
                //alert(data);
                OrderF0Detail.clearForm();
                OrderF0Filter.apply();
            });
        });
        OrderF0Command.addCalcButtonClickHandler(function () {
            var pars = OrderF0Detail.getFormDataV2();
            var id = null;
            for (var i = 0; i < pars.length; i++) {
                if (pars[i].Name == 'id') { id = pars[i].Value; }
            }
            if (id) {
                if (confirm('Для спецификации к заявке №' + id + '. Все цены в колонке "Цена продажи" будут изменены!')) {
                    var rqp = {
                        SessionId: Nskd.Server.SessionId,
                        Command: 'Order.F0.CalcOutgoingPrices',
                        Parameters: [{ Name: 'specId', Value: id }]
                    };
                    Nskd.Http.post({
                        url: '/Order/F0/CalcOutgoingPrices',
                        rqp: rqp,
                        done: function (data) {
                            //alert(data);
                        }
                    });
                }
            } else {
                alert('Для расчёта необходимо выбрать заявку.');
            }
        });
        OrderF0Command.addGoToSpecButtonClickHandler(function () {
            var specId = $('#p_order_f0_current_id').val();
            var rqp = {
                SessionId: Nskd.Server.SessionId,
                Command: 'Order.F0.GoToSpecTable',
                Parameters: [{ Name: 'specId', Value: specId }]
            };
            var data = Nskd.Json.toString(rqp);
            //alert(data); return;
            Nskd.Http.post({
                url: '/Order/F1',
                rqp: rqp,
                done: function (data) {
                    //alert(data);
                    $('#_layout_content').html(data);
                }
            });
        });
        OrderF0Command.addGoToShedButtonClickHandler(function () {
            var specId = $('#p_order_f0_current_id').val();
            var rqp = {
                SessionId: Nskd.Server.SessionId,
                Command: 'Order.F0.GoToShedTable',
                Parameters: [{ Name: 'id', Value: specId }]
            };
            var data = Nskd.Json.toString(rqp);
            //alert(data); return;
            Nskd.Http.post({
                url: '/Order/F3',
                rqp: rqp,
                done: function (data) {
                    //alert(data);
                    $('#_layout_content').html(data);
                }
            });
        });
        return {
            showDetail: function (row) {
                var specId = $(row).attr('data-primarykey');
                $('#p_order_f0_current_id').val(specId);
                $('#order_f0_index div.sect2 div.detail_panel').empty();
                var rqp = {
                    SessionId: Nskd.Server.SessionId,
                    Command: 'Order.F0.Index.GetSpecHead',
                    Parameters: [
                        { Name: 'spec_head_id', Value: specId }
                    ]
                };
                Nskd.Http.post({
                    url: '/Order/F0/Detail',
                    rqp: rqp,
                    done: function (data) {
                        //alert('data: ' + data);
                        $('#order_f0_index div.sect2 div.detail_panel').html(data);
                        OrderF0Command.enableLoadSpecButton(specId);
                        OrderF0Command.enableGoToSpecButton(specId);
                        OrderF0Command.enableCalcSpecButton(specId);
                        OrderF0Command.enableGoToShedButton(specId);
                    }
                });
            },
            createSpec: function () {
                var rqp = {
                    SessionId: Nskd.Server.SessionId,
                    Command: 'Order.F0.CreateSpec',
                    Parameters: null
                };
                Nskd.Http.post({
                    url: '/Order/F0/CreateSpec',
                    rqp: rqp,
                    done: function (data) {
                        alert(data);
                    }
                });
            }
        };
    })();
</script>
