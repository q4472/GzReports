@model String[]
<div>
    <div class="p_order_f2_auction_inf_notice">
        @Html.Raw(Model[0]);
    </div>
    <input type="hidden" class="p_order_f2_auction_inf_dataset" value="@Model[1]" />
</div>
<script type="text/javascript">
    var OrderF2AuctionInf = (function () {
        var mainBox = $('div.p_order_f2_auction_inf_notice > div');
        var notice = mainBox.find('> div.contentTabBoxBlock');
        var noticeTabBoxWrappers = notice.find('div.noticeTabBoxWrapper');
        // Общая информация о закупке
        var d0trs = noticeTabBoxWrappers.eq(0).find('tr');
        // Информация об организации, осуществляющей определение поставщика (подрядчика, исполнителя)
        var d1trs = noticeTabBoxWrappers.eq(1).find('tr');
        // Информация о процедуре закупки
        var d2trs = noticeTabBoxWrappers.eq(2).find('tr');
        // Начальная (максимальная) цена контракта
        var d3trs = noticeTabBoxWrappers.eq(3).find('tr');
        // Информация об объекте закупки
        var d4trs = noticeTabBoxWrappers.eq(4).find('tr');
        // Преимущества, требования к участникам
        var d5trs = noticeTabBoxWrappers.eq(5).find('tr');
        // Требования заказчика
        var d6trs = noticeTabBoxWrappers.eq(6).find('tr');
        // Условия контракта
        var d7trs = noticeTabBoxWrappers.eq(7).find('tr');
        // Обеспечение заявок
        var d8trs = noticeTabBoxWrappers.eq(8).find('tr');
        // Обеспечение исполнения контракта
        var d9trs = noticeTabBoxWrappers.eq(9).find('tr');
        // d6trs иногда отсутствует так что всё надо сместить
        if (noticeTabBoxWrappers.length == 9) {
            d9trs = d8trs;
            d8trs = d7trs;
            d7trs = d6trs;
        }
        function trim(x) {
            return x.replace(/[\r\n]/g, ' ').replace(/^\s+|\s+$/g, '').replace(/\s{2,}/g, ' ');
        }
        function val(x) {
            return trim(x).replace(/[^\d,.]/g, '').replace(',', '.');
        }
        function toDate(x) {
            return x.substring(6, 10) + '-' + x.substring(3, 5) + '-' + x.substring(0, 2);
        }
        var ds = Nskd.Json.parse($('input.p_order_f2_auction_inf_dataset').val());
        var orderTable = null;
        if (ds && ds.tables && ds.tables.length > 0) {
            orderTable = ds.tables[0];
        }
        return {
            getHeadParameters: function () {
                var pars = [];
                pars.push({ Name: 'номер_извещения', Value: trim(mainBox.find('div.cardHeader > h1').text()).substring(9, 28) });
                pars.push({ Name: 'заказчик_наименование', Value: trim(d1trs.eq(0).find('td:eq(1)').text()) });
                pars.push({ Name: 'дата_окончания_подачи', Value: toDate(trim(d2trs.eq(1).find('td:eq(1)').text()).substring(0, 10)) });
                pars.push({ Name: 'дата_проведения', Value: toDate(trim(d2trs.eq(5).find('td:eq(1)').text()).substring(0, 10)) });
                pars.push({ Name: 'сумма_лота', Value: val(d3trs.eq(0).find('td:eq(1)').text()) });
                pars.push({ Name: 'график_поставки', Value: trim(d7trs.last().find('td:eq(1)').text()) });
                pars.push({ Name: 'сумма_обеспечения_заявки', Value: val(d8trs.eq(1).find('td:eq(1)').text()) });
                pars.push({ Name: 'сумма_обеспечения_контракта', Value: val(d9trs.eq(1).find('td:eq(1)').text()) });
                return pars;
            },
            getOrderTable: function () {
                return orderTable;
            }
        };
    })();
</script>